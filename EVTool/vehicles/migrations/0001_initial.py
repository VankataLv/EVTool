# Generated by Django 5.1.3 on 2024-11-16 07:34

import EVTool.vehicles.models.base_ev
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('logo', models.ImageField(upload_to='brandlogos/')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BikeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.brand')),
            ],
            options={
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.brand')),
            ],
            options={
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='EVCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asking_price', models.IntegerField(help_text='Price in EUR. Only whole numbers', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('battery_capacity', models.DecimalField(decimal_places=2, help_text='In kWh. Up to two decimals', max_digits=5)),
                ('range', models.IntegerField(default=None, help_text='WLTP rating or other tool in km', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)])),
                ('description', models.TextField(blank=True)),
                ('horsepower', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('year', models.IntegerField(default=None, validators=[EVTool.vehicles.models.base_ev.validate_year])),
                ('vin', models.CharField(blank=True, help_text='Vehicle Identification Number', max_length=17, null=True, unique=True)),
                ('trim_level', models.CharField(default='unknown', max_length=50)),
                ('mileage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('drivetrain', models.CharField(choices=[('fwd', 'Front-wheel drive'), ('rwd', 'Rear-wheel drive'), ('awd', 'All-wheel drive')], default='unknown', max_length=15)),
                ('body_type', models.CharField(choices=[('sedan', 'Sedan'), ('hatch', 'Hatchback'), ('station_wagon', 'Station wagon'), ('coupe', 'Coupe'), ('suv', 'SUV'), ('pickup_truck', 'Pickup Truck'), ('minivan', 'Minivan'), ('cabriolet', 'Cabriolet')], default='unknown', max_length=15)),
                ('doors', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=4)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.brand')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.color')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.carmodel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.municipality')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EVBike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asking_price', models.IntegerField(help_text='Price in EUR. Only whole numbers', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('battery_capacity', models.DecimalField(decimal_places=2, help_text='In kWh. Up to two decimals', max_digits=5)),
                ('range', models.IntegerField(default=None, help_text='WLTP rating or other tool in km', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)])),
                ('description', models.TextField(blank=True)),
                ('horsepower', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('year', models.IntegerField(default=None, validators=[EVTool.vehicles.models.base_ev.validate_year])),
                ('vin', models.CharField(blank=True, help_text='Vehicle Identification Number', max_length=17, null=True, unique=True)),
                ('mileage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('body_type', models.CharField(choices=[('atv', 'ATV'), ('roadster', 'Roadster'), ('cross', 'Cross'), ('track', 'Track'), ('tricycle', 'Ð¢ricycle')], default='unknown', max_length=15)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.brand')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.color')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.bikemodel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vehicles.municipality')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
